name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions
  
jobs:
  build_on_MacOS:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Boost
        run: |
          brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Release
      - run: cmake --build . --config Release
      - run: cmake --build . --target package --config Release 
      - name: Create Release_mac
        id: create_release_
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.run_number }}-mac 
          release_name: Release ${{ github.run_number }} for mac
          draft: false
          prerelease: false
      
      - name: Check output directory
        run: ls -la output
      - name: Check file path
        run: echo "File path: ./helloworld-0.0.0-${{ runner.workflow.run_number }}-macOS.zip" 
      - name: Check file exists
        run: if [ -f ./helloworld-0.0.${{ github.run_number }}-macOS.zip ]; then echo "File exists"; else echo "File does not exist"; fi
      - name: Create archive
        run: tar -czvf helloworld-0.0.${{ github.run_number }}-macOS.tar.gz output/
      - name: Create Release_mac
        id: create_release_
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.run_number }}-mac
            release_name: Release ${{ github.run_number }} for mac
            draft: false
            prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
            upload_url: ${{ steps.create_release_.outputs.upload_url }}
            asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.tar.gz
            asset_name: helloworld-0.0.${{ github.run_number }}-macOS.tar.gz
            asset_content_type: application/x-gzip
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}