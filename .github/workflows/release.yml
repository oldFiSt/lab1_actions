name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Определяем операционные системы для сборки
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      # Установка необходимых зависимостей
      - name: Install Dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update && sudo apt-get install -y libboost-test-dev libglfw3-dev libglm-dev;
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew update && brew install boost glfw glm;
          fi
      
      # Генерация файлов сборки с помощью CMake
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      # Сборка проекта
      - run: cmake --build .
      
      # Запуск тестов
      - run: cmake --build . --target test
      
      # Создание пакета (если необходимо)
      - run: cmake --build . --target package
      
      # Создание релиза на GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      # Загрузка артефактов релиза на GitHub
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ${{ if eq(matrix.os, 'ubuntu-latest') }} ./helloworld-0.0.${{ github.run_number }}-Linux.deb
            ${{ if eq(matrix.os, 'macos-latest') }} ./helloworld-0.0.${{ github.run_number }}-macOS.pkg  # Измените имя файла на соответствующее для macOS
          asset_name: |
            ${{ if eq(matrix.os, 'ubuntu-latest') }} helloworld-0.0.${{ github.run_number }}-Linux.deb
            ${{ if eq(matrix.os, 'macos-latest') }} helloworld-0.0.${{ github.run_number }}-macOS.pkg  # Измените имя файла на соответствующее для macOS
          asset_content_type: |
            ${{ if eq(matrix.os, 'ubuntu-latest') }} application/vnd.debian.binary-package
            ${{ if eq(matrix.os, 'macos-latest') }} application/octet-stream  # Измените тип контента, если необходимо для macOS
