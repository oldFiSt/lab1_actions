name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: macos-latest
    permissions: write-all
    steps:
      # Шаг 1: Проверка исходного кода из репозитория
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      # Шаг 2: Установка необходимых зависимостей
      - run: brew update && brew install boost glfw glm || { echo "Failed to install dependencies"; exit 1; }
      
      # Шаг 3: Генерация файлов сборки с помощью CMake
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      # Шаг 4: Сборка проекта
      - run: cmake --build .
      
      # Шаг 5: Запуск тестов
      - run: cmake --build . --target test
      
      # Шаг 6: Создание пакета (если необходимо)
      - run: cmake --build . --target package || { echo "Package creation failed"; exit 1; }
      
      # Шаг 7: Проверка существования пакета перед загрузкой
      - name: Check if package exists
        run: |
          if [ ! -f ./helloworld-0.0.${{ github.run_number }}-macOS.pkg ]; then
            echo "Package not found!"
            exit 1
          fi
      
      # Шаг 8: Создание релиза на GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      # Шаг 9: Загрузка артефактов релиза на GitHub
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.pkg 
          asset_name: helloworld-0.0.${{ github.run_number }}-macOS.pkg 
          asset_content_type: application/octet-stream 
