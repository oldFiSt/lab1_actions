cmake_minimum_required(VERSION 3.10)
# –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö set
set(PATCH_VERSION "1" CACHE INTERNAL "Patch version")
set(PROJECT_VESRION 0.0.${PATCH_VERSION})
# –∏–º—è –ø—Ä–æ–∫—Ç–∞ –∏ –µ–≥–æ –≤–µ—Ä—Å–∏—è
project(helloworld VERSION ${PROJECT_VESRION})
#–ø–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
find_package(Boost COMPONENTS unit_test_framework REQUIRED)
#–°–æ–∑–¥–∞—ë—Ç —Ñ–∞–∏–ª versiona
configure_file(version.h.in version.h)

# –î–æ–±–∞–≤–ª—è–µ—Ç  –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π  —Ñ–∞–π–ª  `helloworld_cli`  —Å  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º  —Ñ–∞–π–ª–∞  `main.cpp`.
add_executable(helloworld_cli main.cpp)
#  –î–æ–±–∞–≤–ª—è–µ—Ç  —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é  –±–∏–±–ª–∏–æ—Ç–µ–∫—É  `helloworld`  —Å  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º  —Ñ–∞–π–ª–∞  `lib.cpp`.
add_library(helloworld lib.cpp)
# –Ω—É —Ç—É—Ç –∏ —Ç–∞–∫ –ø–æ–Ω—è—Ç–Ω–æ
add_executable(test_version test_version.cpp)
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç  —Å–≤–æ–π—Å—Ç–≤–∞  –¥–ª—è  —Ç–∞—Ä–≥–µ—Ç–æ–≤  `helloworld_cli`,  `helloworld`  –∏  `test_version`:  —Å—Ç–∞–Ω–¥–∞—Ä—Ç  C++  (C++14)  –∏  —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ  –µ–≥–æ  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
set_target_properties(helloworld_cli helloworld test_version PROPERTIES
    CXX_STANDARD 14
    CXX_STANDARD_REQUIRED ON
)
#–î–æ–±–∞–≤–ª—è–µ—Ç  –≤  –ø—É—Ç—å  –≤–∫–ª—é—á–µ–Ω–∏—è  –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤  –¥–ª—è  —Ç–∞—Ä–≥–µ—Ç–∞  `helloworld`  –ø—É—Ç—å  –∫  –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏  —Å–æ  —Å–±–æ—Ä–∫–æ–π  –ø—Ä–æ–µ–∫—Ç–∞  `CMAKE_BINARY_DIR`.
target_include_directories(helloworld
    PRIVATE "${CMAKE_BINARY_DIR}"
)
# –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç  –º–∞–∫—Ä–æ—Å  `BOOST_TEST_DYN_LINK`  –¥–ª—è  –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π  —Å–≤—è–∑–∏  —Å  Boost  –∏  –¥–æ–±–∞–≤–ª—è–µ—Ç  –≤  –ø—É—Ç—å  –≤–∫–ª—é—á–µ–Ω–∏—è  –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤  –ø—É—Ç—å  `Boost_INCLUDE_DIR`.
set_target_properties(test_version PROPERTIES
    COMPILE_DEFINITIONS BOOST_TEST_DYN_LINK
    INCLUDE_DIRECTORIES ${Boost_INCLUDE_DIR}
)
# –°–≤—è–∑—ã–≤–∞–µ—Ç  `helloworld_cli`  —Å  –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π  `helloworld`.
target_link_libraries(helloworld_cli PRIVATE
    helloworld
)
target_link_libraries(test_version
    ${Boost_LIBRARIES}
    helloworld
)
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç  –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä  (MSVC  –¥–ª—è  Visual  Studio).  –ï—Å–ª–∏  —ç—Ç–æ  MSVC,  —Ç–æ  –¥–æ–±–∞–≤–ª—è–µ—Ç  —Ñ–ª–∞–≥–∏  –∫–æ–º–ø–∏–ª—è—Ü–∏–∏  `/W4`  –¥–ª—è  –æ—à–∏–±–æ–∫  –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
# –ò–Ω–∞—á–µ  –¥–æ–±–∞–≤–ª—è–µ—Ç  —Ñ–ª–∞–≥–∏  –∫–æ–º–ø–∏–ª—è—Ü–∏–∏  `-Wall -Wextra -pedantic -Werror`  –¥–ª—è  –æ—à–∏–±–æ–∫  –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
if (MSVC)
    target_compile_options(helloworld_cli PRIVATE
        /W4
    )
    target_compile_options(helloworld PRIVATE
        /W4
    )
    target_compile_options(test_version PRIVATE
        /W4
    )
else ()
    target_compile_options(helloworld_cli PRIVATE
        -Wall -Wextra -pedantic -Werror
    )
    target_compile_options(helloworld PRIVATE
        -Wall -Wextra -pedantic -Werror
    )
    target_compile_options(test_version PRIVATE
        -Wall -Wextra -pedantic -Werror
    )
endif()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç  –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π  —Ñ–∞–π–ª  `helloworld_cli`  –≤  –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é  `bin`  –ø—Ä–∏  —É—Å—Ç–∞–Ω–æ–≤–∫–µ.
install(TARGETS helloworld_cli RUNTIME DESTINATION bin)
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç  —Ä–µ–∂–∏–º  —Å–±–æ—Ä–∫–∏ (–°–∞–º –Ω–∞–ø–∏—Å–∞–ª üòÅ))
if(CMAKE_BUILD_TYPE STREQUAL "Release")
     set(CPACK_GENERATOR ZIP) 
   elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
     set(CPACK_GENERATOR DEB)
   endif()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç  –ø–∞—Ä–∞–º–µ—Ç—Ä—ã  –ø–∞–∫–µ—Ç–∞  –¥–ª—è  CPack:  –Ω–æ–º–µ—Ä  –≤–µ—Ä—Å–∏–∏  –∏  –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")

set(CPACK_PACKAGE_CONTACT example@example.com)
# –í–∫–ª—é—á–∞–µ—Ç  –º–æ–¥—É–ª—å  CPack  –¥–ª—è  —Å–æ–∑–¥–∞–Ω–∏—è  —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã—Ö  –ø–∞–∫–µ—Ç–æ–≤.
include(CPack)
# –í–∫–ª—é—á–∞–µ—Ç  —Ä–µ–∂–∏–º  —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è  –¥–ª—è  CMake.
enable_testing()
# –î–æ–±–∞–≤–ª—è–µ—Ç  —Ç–µ—Å—Ç  —Å  –∏–º–µ–Ω–µ–º  `test_version`,  –∏—Å–ø–æ–ª—å–∑—É—è  –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π  —Ñ–∞–π–ª  `test_version`.
add_test(test_version test_version)